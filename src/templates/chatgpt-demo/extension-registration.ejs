/*
 * <license header>
 */
import { Text } from "@adobe/react-spectrum"
import { register } from "@adobe/uix-guest"
import { Configuration, OpenAIApi } from "openai";
import { extensionId } from "./Constants"

const configuration = new Configuration({
  organization: process.env.OPENAI_ORG,
  apiKey: process.env.OPENAI_API_KEY,
});
const openai = new OpenAIApi(configuration);

const checkState = (state) => {
  if (!state.selectedText) {
    throw new Error("Please select some text first");
  }
}

const makeRequest = async (prompt) => {
  try {
    const result =  await openai.createCompletion({
      model: "text-davinci-003",
      prompt: prompt,
      max_tokens: 2000
    }, { timeout: 20000 });
    return result.data.choices[0].text;
  } catch (e) {
    throw new Error("An unexpected error has occurred. Please try again");
  }
  return "";
}

function ExtensionRegistration() {
  const init = async () => {
    const guestConnection = await register({
      id: extensionId,
      methods: {
        rte: {
           getCustomButtons: () => ([
            {
              id: "my.company.generate",
              tooltip: "Generate AI text based on the prompt. Highlight the text and select",
              icon: 'MagicWand',
              toolbarGroup: 8,
              onClick: async (state) => {
                try {
                  checkState(state);
                  const result = await makeRequest(state.selectedText);

                  return [{
                    type: "replaceContent",
                    value: state.text.replace(state.selectedText, result)
                  }]

                } catch (e) {
                  await guestConnection.host.toaster.display({ variant: "negative", message: e.message});
                  console.error('[CHATGPT EXTENSION] Error happened in extension', e);
                  return [];
                }
              }
            },
            {
              id: "my.company.complete",
              tooltip: "Let AI pickup where you left off. Start writing, highlight the text, and select",
              icon: 'Type',
              toolbarGroup: 8,
              onClick: async (state) => {
                try {
                  checkState(state);
                  const result = await makeRequest("Complete a following text:\n" + state.selectedText);

                  return [{
                    type: "replaceContent",
                    value: state.text.replace(state.selectedText, state.selectedText + result)
                  }]
                } catch (e) {
                  await guestConnection.host.toaster.display({ variant: "negative", message: e.message});
                  console.error('[CHATGPT EXTENSION] Error happened in extension', e);
                  return [];
                }
              }
            },
            {
              id: "my.company.professional",
              tooltip: "Rewrite text in a professional tone. Highlight text and select",
              icon: 'AnnotatePen',
              toolbarGroup: 9,
              onClick: async (state) => {
                try {
                  checkState(state);
                  const result = await makeRequest("Rewrite a text below to be business writing:\n" + state.selectedText);

                  return [{
                    type: "replaceContent",
                    value: state.text.replace(state.selectedText, result)
                  }]
                } catch (e) {
                  await guestConnection.host.toaster.display({ variant: "negative", message: e.message});
                  console.error('[CHATGPT EXTENSION] Error happened in extension', e);
                  return [];
                }
              }
            },
            {
              id: "my.company.persuasive",
              tooltip: "Rewrite text in a persuasive tone. Highlight text and select",
              icon: 'Promote',
              toolbarGroup: 9,
              onClick: async (state) => {
                try {
                  checkState(state);
                  const result = await makeRequest("Rewrite to be persuasive:\n" + state.selectedText);

                  return [{
                    type: "replaceContent",
                    value: state.text.replace(state.selectedText, result)
                  }]
                } catch (e) {
                  await guestConnection.host.toaster.display({ variant: "negative", message: e.message});
                  console.error('[CHATGPT EXTENSION] Error happened in extension', e);
                  return [];
                }
              }
            },
            {
              id: "my.company.engaging",
              tooltip: "Rewrite text in an engaging tone to go viral. Highlight text and select",
              icon: 'SocialNetwork',
              toolbarGroup: 9,
              onClick: async (state) => {
                try {
                  checkState(state);
                  const result = await makeRequest("Rewrite the text below to be engaging and go viral for social media:\n" + state.selectedText);

                  return [{
                    type: "replaceContent",
                    value: state.text.replace(state.selectedText, result)
                  }]
                } catch (e) {
                  await guestConnection.host.toaster.display({ variant: "negative", message: e.message});
                  console.error('[CHATGPT EXTENSION] Error happened in extension', e);
                  return [];
                }
              }
            },
            {
              id: "my.company.simplify",
              tooltip: "Translates text into simpler concepts. Highlight text and select",
              icon: 'GraphBarHorizontal',
              toolbarGroup: 9,
              onClick: async (state) => {
                try {
                  checkState(state);
                  const result = await makeRequest("Simplify a following text:\n" + state.selectedText);

                  return [{
                    type: "replaceContent",
                    value: state.text.replace(state.selectedText, result)
                  }]
                } catch (e) {
                  await guestConnection.host.toaster.display({ variant: "negative", message: e.message});
                  console.error('[CHATGPT EXTENSION] Error happened in extension', e);
                  return [];
                }
              }
            },
            {
              id: "my.company.summarize",
              tooltip: "Summarize the text using AI. Highlight text and select",
              icon: 'Summarize',
              toolbarGroup: 9,
              onClick: async (state) => {
                try {
                  checkState(state);
                  const result = await makeRequest(state.selectedText + "\n tl;dr \n");

                  return [{
                    type: "replaceContent",
                    value: state.text.replace(state.selectedText, result)
                  }]
                } catch (e) {
                  await guestConnection.host.toaster.display({ variant: "negative", message: e.message});
                  console.error('[CHATGPT EXTENSION] Error happened in extension', e);
                  return [];
                }
              }
            },
          ])
        }
      }
    })
  }
  init().catch(console.error)

  return <Text>IFrame for integration with Host (AEM)...</Text>;
}

export default ExtensionRegistration;
