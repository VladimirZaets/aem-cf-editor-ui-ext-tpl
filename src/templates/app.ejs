/*
 * <license header>
 */

import React from "react";
import ErrorBoundary from "react-error-boundary";
import { HashRouter as Router, Routes, Route } from "react-router-dom";
import ExtensionRegistration from "./ExtensionRegistration";
<%_ (extensionManifest.headerMenuButtons || []).forEach((button) => { -%>
  <%_ if (button.needsModal) { -%>
    <%_ const buttonComponent = button.id.replace(/-/g, '') + 'Modal' -%>
    <%_ const capitalizedButtonComponent = buttonComponent.charAt(0).toUpperCase() + buttonComponent.slice(1); -%>
import <%- capitalizedButtonComponent %> from "./<%- capitalizedButtonComponent %>";
<%_ }}) -%>
<%_ if (extensionManifest.rte && extensionManifest.rte.widgets) { -%>
  <%_ extensionManifest.rte.widgets.forEach((widget) => { -%>
  <%_ const widgetComponent = widget.id.replace(/-/g, '') + 'Widget' -%>
  <%_ const capitalizedWidgetComponent = widgetComponent.charAt(0).toUpperCase() + widgetComponent.slice(1); -%>
import <%- capitalizedWidgetComponent %> from "./<%- capitalizedWidgetComponent %>";
  <%_ }) -%>
<%_ } -%>

function App() {
  return (
    <Router>
      <ErrorBoundary onError={onError} FallbackComponent={fallbackComponent}>
        <Routes>
          <Route index element={<ExtensionRegistration />} />
          <Route
            exact path="index.html"
            element={<ExtensionRegistration />}
          />
          <%_ if (extensionManifest.headerMenuButtons) { -%>
            <%_ extensionManifest.headerMenuButtons.forEach((button) => { -%>
              <%_ if (button.needsModal) { -%>
                <%_ const buttonComponent = button.id.replace(/-/g, '') + 'Modal' -%>
                <%_ const capitalizedButtonComponent = buttonComponent.charAt(0).toUpperCase() + buttonComponent.slice(1); -%>
          <Route
            exact path="<%- button.id %>-modal"
            element={<<%- capitalizedButtonComponent %> />}
          />
          <%_ }})} -%>
          <%_ if (extensionManifest.rte && extensionManifest.rte.widgets) { -%>
            <%_ extensionManifest.rte.widgets.forEach((widget) => { -%>
              <%_ const widgetComponent = widget.id.replace(/-/g, '') + 'Widget' -%>
              <%_ const capitalizedWidgetComponent = widgetComponent.charAt(0).toUpperCase() + widgetComponent.slice(1); -%>
          <Route
            exact path="<%- widget.id %>-widget"
            element={<<%- capitalizedWidgetComponent %> />}
          />
            <%_ }) -%>
          <%_ } -%>
          {/* @todo YOUR CUSTOM ROUTES SHOULD BE HERE */}
        </Routes>
      </ErrorBoundary>
    </Router>
  )

  // Methods

  // error handler on UI rendering failure
  function onError(e, componentStack) {}

  // component to show if UI fails rendering
  function fallbackComponent({ componentStack, error }) {
    return (
      <React.Fragment>
        <h1 style={{ textAlign: "center", marginTop: "20px" }}>
          Phly, phly... Something went wrong :(
        </h1>
        <pre>{componentStack + "\n" + error.message}</pre>
      </React.Fragment>
    );
  }
}

export default App;
